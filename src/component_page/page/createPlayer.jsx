import { useState } from "react";
import { ethers } from "ethers";
import axios from "axios";
import Form from "@rjsf/core";
import validator from "@rjsf/validator-ajv8";
import { useNavigate } from "react-router-dom";

const schema = {
  type: "object",
  properties: {
    name: {
      type: "string",
      title: "T√™n ng∆∞·ªùi ch∆°i",
      minLength: 1,
    },
  },
  required: ["name"],
};

export default function CreatePlayer() {
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  const handleSubmit = async ({ formData }) => {
    try {
      const newWallet = ethers.Wallet.createRandom();
      const playerData = {
        name: formData.name,
        walletAddress: newWallet.address,
        tokenBalance: 0,
      };
      const response = await axios.post(
        "https://public-nodejs.onrender.com/v1/api/createplayer",
        playerData
      );

      const wallet = response.data.data;

      // Hi·ªÉn th·ªã th√¥ng tin b·∫±ng alert
      alert(
        "üéØ Ghi ch√∫ quan tr·ªçng:\n" +
        "H√£y l∆∞u l·∫°i th√¥ng tin v√≠ n√†y, b·∫°n s·∫Ω c·∫ßn n√≥ cho c√°c b∆∞·ªõc ti·∫øp theo!\n\n" +
        `Ng∆∞·ªùi ·ª®ng Tuy·ªÉn: ${wallet.name}\n` +
        `ƒê·ªãa Ch·ªâ V√≠: ${wallet.walletAddress}\n` +
        `S·ªë D∆∞: ${wallet.tokenBalance} Token`
      );
      // Sau khi b·∫•m OK trong alert => ƒëi·ªÅu h∆∞·ªõng
      navigate("/question");
    } catch (err) {
      console.error("L·ªói khi l∆∞u v√≠:", err);
      setError("L∆∞u v√≠ th·∫•t b·∫°i, c√≥ th·ªÉ do t√™n ng∆∞·ªùi ch∆°i ƒë√£ t·ªìn t·∫°i");
    }
  };

  return (
    <div>
      <h2>Khai b√°o th√¥ng tin</h2>
      <p>L∆∞u √Ω: B·∫°n kh√¥ng c·∫ßn nh·∫≠p th√¥ng tin c√° nh√¢n</p>
      <p>L∆∞u √Ω: ƒê·∫£m b·∫£o b·∫°n ghi ch√∫ l·∫°i ƒë·ªãa ch·ªâ v√≠ c·ªßa m√¨nh</p>

      <Form schema={schema} onSubmit={handleSubmit} validator={validator} />

      {error && <p style={{ color: "red" }}>{error}</p>}
    </div>
  );
}
